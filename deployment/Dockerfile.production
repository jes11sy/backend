# Multi-stage build для продакшена
# Первый этап: установка зависимостей
FROM python:3.11-slim as dependencies

# Установка системных зависимостей
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    libmagic1 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Создание пользователя для безопасности
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Установка Python зависимостей
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Второй этап: сборка приложения
FROM python:3.11-slim as production

# Установка только runtime зависимостей
RUN apt-get update && apt-get install -y \
    libpq5 \
    libmagic1 \
    curl \
    tini \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Создание пользователя
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Копирование Python зависимостей из первого этапа
COPY --from=dependencies /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=dependencies /usr/local/bin /usr/local/bin

# Создание директорий
RUN mkdir -p /app/logs /app/media /app/data \
    && chown -R appuser:appuser /app

# Установка рабочей директории
WORKDIR /app

# Копирование кода приложения
COPY --chown=appuser:appuser . .

# Переключение на непривилегированного пользователя
USER appuser

# Создание необходимых директорий включая структуру media (под правильным пользователем)
RUN mkdir -p logs media/zayvka/bso media/zayvka/rashod media/zayvka/zapis media/gorod/rashod data /tmp/uploads

# Переменные окружения для продакшена
ENV PYTHONPATH=/app
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV ENVIRONMENT=production
ENV WORKERS=4

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Открытие порта
EXPOSE 8000

# Использование tini для правильной обработки сигналов
ENTRYPOINT ["/usr/bin/tini", "--"]

# Запуск приложения
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--access-log", "--log-config", "app/logging_config.py"] 