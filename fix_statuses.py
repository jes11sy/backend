#!/usr/bin/env python3

import os
import sys
from dotenv import load_dotenv
import psycopg2

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def fix_statuses():
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(
            host=os.getenv('POSTGRESQL_HOST', 'localhost'),
            port=os.getenv('POSTGRESQL_PORT', 5432),
            user=os.getenv('POSTGRESQL_USER'),
            password=os.getenv('POSTGRESQL_PASSWORD'),
            database=os.getenv('POSTGRESQL_DBNAME')
        )
        
        cur = conn.cursor()
        
        print("üîß –û–ë–ù–û–í–õ–Ø–ï–ú –°–¢–ê–¢–£–°–´ –ù–ê –†–£–°–°–ö–ò–ô –Ø–ó–´–ö...")
        print("=" * 50)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã
        status_updates = [
            ("new", "–ù–æ–≤–∞—è"),
            ("pending", "–û–∂–∏–¥–∞–µ—Ç"),
            ("in_progress", "–í —Ä–∞–±–æ—Ç–µ"),
            ("done", "–ì–æ—Ç–æ–≤–æ"),
            ("completed", "–ì–æ—Ç–æ–≤–æ"),
            ("cancelled", "–û—Ç–∫–∞–∑"),
            ("assigned", "–ü—Ä–∏–Ω—è–ª"),
            ("accepted", "–ü—Ä–∏–Ω—è–ª"),
            ("in_way", "–í –ø—É—Ç–∏"),
            ("in_work", "–í —Ä–∞–±–æ—Ç–µ"),
            ("waiting", "–û–∂–∏–¥–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è"),
            ("recall", "–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å"),
            ("tno", "–¢–ù–û"),
            ("refused", "–û—Ç–∫–∞–∑"),
            ("finished", "–ì–æ—Ç–æ–≤–æ")
        ]
        
        total_updated = 0
        
        for old_status, new_status in status_updates:
            cur.execute("UPDATE requests SET status = %s WHERE status = %s", (new_status, old_status))
            updated_count = cur.rowcount
            if updated_count > 0:
                print(f"‚úÖ '{old_status}' ‚Üí '{new_status}': {updated_count} –∑–∞—è–≤–æ–∫")
                total_updated += updated_count
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cur.execute("SELECT DISTINCT status, COUNT(*) FROM requests GROUP BY status ORDER BY status")
        results = cur.fetchall()
        
        print("=" * 50)
        print("üìä –ò–¢–û–ì–û–í–´–ï –°–¢–ê–¢–£–°–´:")
        for status, count in results:
            print(f"   {status}: {count} –∑–∞—è–≤–æ–∫")
        
        print("=" * 50)
        print(f"üéâ –û–ë–ù–û–í–õ–ï–ù–û –í–°–ï–ì–û: {total_updated} –∑–∞—è–≤–æ–∫")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        
        cur.close()
        conn.close()
        
        print("‚úÖ –ì–û–¢–û–í–û! –°—Ç–∞—Ç—É—Å—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    fix_statuses() 