#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä–µ
"""
import requests
import json

def check_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    base_url = "https://api.lead-schem.ru"
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ API...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
    try:
        health_response = requests.get(f"{base_url}/api/v1/health/", timeout=10)
        print(f"‚úÖ Health check: {health_response.status_code}")
        if health_response.status_code == 200:
            print(f"üìä Response: {health_response.json()}")
    except Exception as e:
        print(f"‚ùå Health check failed: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS –¥–ª—è —Ä–∞–∑–Ω—ã—Ö endpoints
    origins_to_test = ["https://lead-schem.ru", "http://localhost:3000"]
    endpoints_to_test = [
        "/api/v1/auth/login",
        "/api/v1/health/", 
        "/api/auth/login",  # —Å—Ç–∞—Ä—ã–π endpoint
    ]
    
    for origin in origins_to_test:
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ origin: {origin}")
        
        for endpoint in endpoints_to_test:
            print(f"  üì° Endpoint: {endpoint}")
            
            # OPTIONS preflight –∑–∞–ø—Ä–æ—Å
            headers = {
                'Origin': origin,
                'Access-Control-Request-Method': 'POST',
                'Access-Control-Request-Headers': 'Content-Type,Authorization'
            }
            
            try:
                url = f"{base_url}{endpoint}"
                response = requests.options(url, headers=headers, timeout=10)
                
                print(f"    üìã Status: {response.status_code}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
                cors_headers = [
                    'Access-Control-Allow-Origin',
                    'Access-Control-Allow-Methods', 
                    'Access-Control-Allow-Headers',
                    'Access-Control-Allow-Credentials'
                ]
                
                for header in cors_headers:
                    value = response.headers.get(header)
                    status = "‚úÖ" if value else "‚ùå"
                    print(f"    {status} {header}: {value}")
                    
            except Exception as e:
                print(f"    ‚ùå Error: {e}")

def check_real_browser_request():
    """–ò–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å"""
    print("\nüåê –ò–º–∏—Ç–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...")
    
    # –°–Ω–∞—á–∞–ª–∞ OPTIONS (preflight)
    headers = {
        'Origin': 'https://lead-schem.ru',
        'Access-Control-Request-Method': 'POST',
        'Access-Control-Request-Headers': 'content-type,authorization',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
    }
    
    try:
        url = "https://api.lead-schem.ru/api/v1/auth/login"
        preflight = requests.options(url, headers=headers, timeout=10)
        
        print(f"üìã Preflight status: {preflight.status_code}")
        print("üìä Preflight headers:")
        for key, value in preflight.headers.items():
            if 'access-control' in key.lower():
                print(f"   {key}: {value}")
                
        # –ü–æ—Ç–æ–º POST –∑–∞–ø—Ä–æ—Å
        if preflight.status_code == 200:
            post_headers = {
                'Origin': 'https://lead-schem.ru',
                'Content-Type': 'application/json',
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
            }
            
            post_data = {"username": "test", "password": "test"}
            
            post_response = requests.post(url, 
                                        headers=post_headers, 
                                        json=post_data, 
                                        timeout=10)
                                        
            print(f"\nüìÆ POST status: {post_response.status_code}")
            print("üìä POST CORS headers:")
            for key, value in post_response.headers.items():
                if 'access-control' in key.lower():
                    print(f"   {key}: {value}")
                    
    except Exception as e:
        print(f"‚ùå Browser request failed: {e}")

if __name__ == "__main__":
    check_server_status()
    check_real_browser_request() 