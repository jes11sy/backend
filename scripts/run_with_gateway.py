#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ backend —Å–∏—Å—Ç–µ–º—ã —Å Kong API Gateway
"""

import subprocess
import sys
import time
import requests
import os
from pathlib import Path

def run_command(command, cwd=None, shell=True):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        result = subprocess.run(
            command, 
            shell=shell, 
            cwd=cwd, 
            capture_output=True, 
            text=True,
            check=True
        )
        return True, result.stdout
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {command}")
        print(f"–ö–æ–¥ –æ—à–∏–±–∫–∏: {e.returncode}")
        print(f"Stderr: {e.stderr}")
        return False, e.stderr

def check_service(url, service_name, timeout=30):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å {service_name}...")
    
    for i in range(timeout):
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ {service_name} –¥–æ—Å—Ç—É–ø–µ–Ω!")
                return True
        except requests.exceptions.RequestException:
            pass
        
        if i < timeout - 1:
            print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {service_name}... ({i+1}/{timeout})")
            time.sleep(1)
    
    print(f"‚ùå {service_name} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ {timeout} —Å–µ–∫—É–Ω–¥")
    return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å Kong API Gateway...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
    success, _ = run_command("docker --version")
    if not success:
        print("‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
    success, _ = run_command("docker-compose --version")
    if not success:
        print("‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        sys.exit(1)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é deployment
    deployment_dir = Path(__file__).parent.parent / "deployment"
    
    print("üîß –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...")
    run_command("docker-compose -f kong-gateway.yml down", cwd=deployment_dir)
    
    print("üèóÔ∏è –°–æ–±–∏—Ä–∞—é –∏ –∑–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å—ã...")
    success, output = run_command(
        "docker-compose -f kong-gateway.yml up -d --build", 
        cwd=deployment_dir
    )
    
    if not success:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤")
        print(output)
        sys.exit(1)
    
    print("‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã! –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã
    services = [
        ("http://localhost:8000/health", "Backend API"),
        ("http://localhost:6379", "Redis", False),  # Redis –Ω–µ –∏–º–µ–µ—Ç HTTP endpoint
        ("http://localhost:8080/health", "Kong API Gateway"),
        ("http://localhost:9090", "Prometheus"),
        ("http://localhost:3001", "Grafana")
    ]
    
    all_healthy = True
    for service_info in services:
        if len(service_info) == 2:
            url, name = service_info
            if not check_service(url, name):
                all_healthy = False
        else:
            # –î–ª—è Redis –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
            print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É {service_info[1]}")
    
    print("\n" + "="*60)
    if all_healthy:
        print("üéâ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
    
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:")
    print("üåê Kong API Gateway:     http://localhost:8080")
    print("üîß Kong Admin API:       http://localhost:8001")
    print("‚ö° Backend API (–ø—Ä—è–º–æ–π): http://localhost:8000")
    print("üìä Prometheus:           http://localhost:9090")
    print("üìà Grafana:              http://localhost:3001")
    print("üìö API Docs:             http://localhost:8080/docs")
    print("üìñ ReDoc:                http://localhost:8080/redoc")
    
    print("\nüîë –ü—Ä–∏–º–µ—Ä—ã API –∑–∞–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ Gateway:")
    print("GET  http://localhost:8080/api/v1/requests")
    print("GET  http://localhost:8080/api/v1/users") 
    print("POST http://localhost:8080/api/v1/auth/login")
    print("GET  http://localhost:8080/health")
    
    print("\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:")
    print("- –í—Å–µ API –∑–∞–ø—Ä–æ—Å—ã —Ç–µ–ø–µ—Ä—å –∏–¥—É—Ç —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç 8080 (Kong)")
    print("- –î–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö endpoints –Ω—É–∂–Ω–∞ JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
    print("- Rate limiting: 100 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω, 1000 –∑–∞–ø—Ä–æ—Å–æ–≤/—á–∞—Å")
    
    print("\nüõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("docker-compose -f deployment/kong-gateway.yml down")
    print("="*60)

if __name__ == "__main__":
    main() 