#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CORS –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""
import requests
import sys
from urllib.parse import urljoin

def test_cors(base_url: str, origin: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç CORS –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ origin"""
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –¥–ª—è {origin}")
    print(f"üì° API URL: {base_url}")
    
    # –¢–µ—Å—Ç preflight –∑–∞–ø—Ä–æ—Å–∞
    headers = {
        'Origin': origin,
        'Access-Control-Request-Method': 'POST',
        'Access-Control-Request-Headers': 'Content-Type,Authorization'
    }
    
    try:
        # OPTIONS –∑–∞–ø—Ä–æ—Å (preflight)
        options_url = urljoin(base_url, '/api/v1/health/')
        response = requests.options(options_url, headers=headers, timeout=10)
        
        print(f"üìã OPTIONS –∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
        cors_headers = {
            'Access-Control-Allow-Origin': response.headers.get('Access-Control-Allow-Origin'),
            'Access-Control-Allow-Methods': response.headers.get('Access-Control-Allow-Methods'),
            'Access-Control-Allow-Headers': response.headers.get('Access-Control-Allow-Headers'),
            'Access-Control-Allow-Credentials': response.headers.get('Access-Control-Allow-Credentials')
        }
        
        print("\nüìä CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏:")
        for header, value in cors_headers.items():
            status = "‚úÖ" if value else "‚ùå"
            print(f"{status} {header}: {value}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –Ω–∞—à origin
        allowed_origin = cors_headers['Access-Control-Allow-Origin']
        if allowed_origin == origin or allowed_origin == '*':
            print(f"\n‚úÖ Origin {origin} —Ä–∞–∑—Ä–µ—à–µ–Ω!")
            return True
        else:
            print(f"\n‚ùå Origin {origin} –ù–ï —Ä–∞–∑—Ä–µ—à–µ–Ω!")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    base_url = "https://api.lead-schem.ru"
    origins_to_test = [
        "https://lead-schem.ru",
        "https://www.lead-schem.ru",
        "https://admin.lead-schem.ru",
        "http://localhost:3000",  # –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    ]
    
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∫–∞–∫ URL
    if len(sys.argv) > 1:
        base_url = sys.argv[1]
    
    print(f"üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –¥–ª—è API: {base_url}")
    print("=" * 50)
    
    results = {}
    for origin in origins_to_test:
        results[origin] = test_cors(base_url, origin)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìà –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
    
    success_count = sum(results.values())
    total_count = len(results)
    
    for origin, success in results.items():
        status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if success else "‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        print(f"{status} {origin}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{total_count} origins –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    
    if success_count == total_count:
        print("üéâ –í—Å–µ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        sys.exit(0)
    else:
        print("‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!")
        sys.exit(1)

if __name__ == "__main__":
    main() 