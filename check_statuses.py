#!/usr/bin/env python3

import os
from dotenv import load_dotenv
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

load_dotenv()

def check_request_statuses():
    try:
        engine = create_engine(os.getenv('DATABASE_URL'))
        SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
        db = SessionLocal()
        
        # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        result = db.execute(text("SELECT DISTINCT status FROM requests ORDER BY status"))
        statuses = result.fetchall()
        
        print("üîç –°–¢–ê–¢–£–°–´ –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:")
        print("=" * 40)
        
        if statuses:
            for status in statuses:
                status_value = status[0]
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ —Å –∫–∞–∂–¥—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
                count_result = db.execute(text("SELECT COUNT(*) FROM requests WHERE status = :status"), {"status": status_value})
                count = count_result.fetchone()[0]
                print(f"‚úÖ '{status_value}' - {count} –∑–∞—è–≤–æ–∫")
        else:
            print("‚ùå –ù–µ—Ç –∑–∞—è–≤–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫
        total_result = db.execute(text("SELECT COUNT(*) FROM requests"))
        total = total_result.fetchone()[0]
        print("=" * 40)
        print(f"üìä –í–°–ï–ì–û –ó–ê–Ø–í–û–ö: {total}")
        
        db.close()
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {str(e)}")

if __name__ == "__main__":
    check_request_statuses() 